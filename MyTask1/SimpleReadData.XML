<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<TrustFrameworkPolicy 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
    xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06" 
    PolicySchemaVersion="0.3.0.0" 
    TenantId="aslyzhukorg.onmicrosoft.com"
    PolicyId="B2C_1A_SimpleReadData"
    PublicPolicyUri="http://aslyzhukorg.onmicrosoft.com/B2C_1A_SimpleReadData">

    <BuildingBlocks>
        <ClaimsSchema>
            <ClaimType Id="objectId">
                <DisplayName>unique object Id for subject of the claims being returned</DisplayName>
                <DataType>string</DataType>
            </ClaimType>        
            <ClaimType Id="givenName">
                <DisplayName>Given Name</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Your given name (also known as first name).</UserHelpText>
                <UserInputType>TextBox</UserInputType>
            </ClaimType>
            <ClaimType Id="surname">
                <DisplayName>Surname</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Your surname (also known as family name or last name).</UserHelpText>
                <UserInputType>TextBox</UserInputType>
            </ClaimType>
            <ClaimType Id="displayName">
                <DisplayName>Display Name</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Your display name.</UserHelpText>
                <UserInputType>TextBox</UserInputType>
            </ClaimType>
            <ClaimType Id="email">
                <DisplayName>Email Address</DisplayName>
                <DataType>string</DataType>
                <DefaultPartnerClaimTypes>
                    <Protocol Name="OpenIdConnect" PartnerClaimType="email"/>
                </DefaultPartnerClaimTypes>
                <UserHelpText>Your email address. </UserHelpText>
                <UserInputType>TextBox</UserInputType>
                <!-- <Restriction>
                    <Pattern RegularExpression="^[a-zA-Z0-9.!#$%&amp;&apos;^_`{}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$" HelpText="Please enter a valid email address something like maurice@contoso.com"/>
                </Restriction> -->
            </ClaimType>
            <ClaimType Id="password">
                <DisplayName>Password</DisplayName>
                <DataType>string</DataType>
                <AdminHelpText>Enter password</AdminHelpText>
                <UserHelpText>Enter password</UserHelpText>
                <UserInputType>Password</UserInputType>
                <PredicateValidationReference Id="StrongPassword" />
            </ClaimType>
            <ClaimType Id="reenterPassword">
                <DisplayName>Confirm new password</DisplayName>
                <DataType>string</DataType>
                <AdminHelpText>Confirm new password</AdminHelpText>
                <UserHelpText>Reenter password</UserHelpText>
                <UserInputType>Password</UserInputType>
            </ClaimType>
            <ClaimType Id="userPrincipalName">
                <DisplayName>UserPrincipalName</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Your user name as stored in the Azure Active Directory.</UserHelpText>
            </ClaimType>
            <ClaimType Id="passwordPolicies">
                <DisplayName>Password Policies</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Password policies used by Azure AD to determine password strength, expiry etc.</UserHelpText>
            </ClaimType>

            <ClaimType Id="grant_type">
                <DisplayName>grant_type</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Special parameter passed for local account authentication to login.microsoftonline.com.</UserHelpText>
            </ClaimType>
            <ClaimType Id="scope">
                <DisplayName>scope</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Special parameter passed for local account authentication to login.microsoftonline.com.</UserHelpText>
            </ClaimType>
            <ClaimType Id="nca">
                <DisplayName>nca</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Special parameter passed for local account authentication to login.microsoftonline.com.</UserHelpText>
            </ClaimType>
            <ClaimType Id="client_id">
                <DisplayName>client_id</DisplayName>
                <DataType>string</DataType>
                <AdminHelpText>Special parameter passed to EvoSTS.</AdminHelpText>
                <UserHelpText>Special parameter passed to EvoSTS.</UserHelpText>
            </ClaimType>
            <ClaimType Id="resource_id">
                <DisplayName>resource_id</DisplayName>
                <DataType>string</DataType>
                <AdminHelpText>Special parameter passed to EvoSTS.</AdminHelpText>
                <UserHelpText>Special parameter passed to EvoSTS.</UserHelpText>
            </ClaimType>

            <ClaimType Id="jobTitle">
                <DisplayName>jobTitle</DisplayName>
                <DataType>string</DataType>
                <AdminHelpText>---.</AdminHelpText>
                <UserHelpText>----.</UserHelpText>
                <UserInputType>TextBox</UserInputType>
            </ClaimType>
            <ClaimType Id="employeeHireDate">
                <DisplayName>EmployeeHireDate</DisplayName>
                <DataType>string</DataType>
                <AdminHelpText>---.</AdminHelpText>
                <UserHelpText>---.</UserHelpText>
                <UserInputType>TextBox</UserInputType>
            </ClaimType>
            <ClaimType Id="extension_dateOfBirth">
                <DisplayName>dateOfBirth</DisplayName>
                <DataType>date</DataType>
                <UserHelpText>---.</UserHelpText>
                <UserInputType>DateTimeDropdown</UserInputType>
            </ClaimType>
                <ClaimType Id="extension_MustResetPassword">
                <DisplayName>extension_MustResetPassword</DisplayName>
                <DataType>boolean</DataType>
            </ClaimType>
        </ClaimsSchema>
        <Predicates>
            <Predicate Id="IsLengthBetween8And64" Method="IsLengthRange" HelpText="The password must be between 8 and 64 characters.">
                <Parameters>
                <Parameter Id="Minimum">8</Parameter>
                <Parameter Id="Maximum">64</Parameter>
                </Parameters>
            </Predicate>
            <Predicate Id="Lowercase" Method="IncludesCharacters" HelpText="a lowercase letter">
                <Parameters>
                <Parameter Id="CharacterSet">a-z</Parameter>
                </Parameters>
            </Predicate>
            <Predicate Id="Uppercase" Method="IncludesCharacters" HelpText="an uppercase letter">
                <Parameters>
                <Parameter Id="CharacterSet">A-Z</Parameter>
                </Parameters>
            </Predicate>
            <Predicate Id="Number" Method="IncludesCharacters" HelpText="a digit">
                <Parameters>
                    <Parameter Id="CharacterSet">0-9</Parameter>
                </Parameters>
            </Predicate>
            <Predicate Id="Symbol" Method="IncludesCharacters" HelpText="a symbol">
                <Parameters>
                    <Parameter Id="CharacterSet">@#$%^&amp;*\-_+=[]{}|\\:',.?/`~"();!</Parameter>
                </Parameters>
            </Predicate>
            <Predicate Id="AllowedCharacters" Method="MatchesRegex" HelpText="An invalid character was provided.">
                <Parameters>
                    <Parameter Id="RegularExpression">(^([0-9A-Za-z\d@#$%^&amp;*\-_+=[\]{}|\\:',?/`~"();! ]|(\.(?!@)))+$)|(^$)</Parameter>
                </Parameters>
            </Predicate>
            <Predicate Id="DisallowedWhitespace" Method="MatchesRegex" HelpText="The password must not begin or end with a whitespace character.">
                <Parameters>
                    <Parameter Id="RegularExpression">(^\S.*\S$)|(^\S+$)|(^$)</Parameter>
                </Parameters>
            </Predicate>
        </Predicates>
        <PredicateValidations>
            <PredicateValidation Id="StrongPassword">
                <PredicateGroups>
                    <PredicateGroup Id="DisallowedWhitespaceGroup">
                        <PredicateReferences>
                            <PredicateReference Id="DisallowedWhitespace"/>
                        </PredicateReferences>
                    </PredicateGroup>
                    <PredicateGroup Id="AllowedCharactersGroup">
                        <PredicateReferences>
                            <PredicateReference Id="AllowedCharacters"/>
                        </PredicateReferences>
                    </PredicateGroup>
                    <PredicateGroup Id="LengthGroup">
                        <PredicateReferences>
                            <PredicateReference Id="IsLengthBetween8And64"/>
                        </PredicateReferences>
                    </PredicateGroup>
                    <PredicateGroup Id="CharacterClasses">
                        <UserHelpText>The password must have at least 3 of the following:</UserHelpText>
                        <PredicateReferences MatchAtLeast="3">
                            <PredicateReference Id="Lowercase"/>
                            <PredicateReference Id="Uppercase"/>
                            <PredicateReference Id="Number"/>
                            <PredicateReference Id="Symbol"/>
                        </PredicateReferences>
                    </PredicateGroup>
                </PredicateGroups>
            </PredicateValidation>
        </PredicateValidations>
        <ClaimsTransformations>
            <ClaimsTransformation Id="CreateDisplayNameTransformation" TransformationMethod="FormatStringMultipleClaims">
                <InputClaims>
                <InputClaim ClaimTypeReferenceId="givenName" TransformationClaimType="inputClaim1"/>
                <InputClaim ClaimTypeReferenceId="surname" TransformationClaimType="inputClaim2"/>
                </InputClaims>
                <InputParameters>
                <InputParameter Id="stringFormat" DataType="string" Value="{0} {1}"/>
                </InputParameters>
                <OutputClaims>
                <OutputClaim ClaimTypeReferenceId="displayName" TransformationClaimType="outputClaim"/>
                </OutputClaims>
            </ClaimsTransformation>
        </ClaimsTransformations>
        <ContentDefinitions>
            <ContentDefinition Id="SelfAssertedContentDefinition">
                <LoadUri>~/tenant/templates/AzureBlue/selfAsserted.cshtml</LoadUri>
                <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
                <DataUri>urn:com:microsoft:aad:b2c:elements:contract:selfasserted:2.1.7</DataUri>
            </ContentDefinition>
            <ContentDefinition Id="SignupOrSigninContentDefinition">
                <LoadUri>~/tenant/templates/AzureBlue/unified.cshtml</LoadUri>
                <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
                <DataUri>urn:com:microsoft:aad:b2c:elements:contract:unifiedssp:2.1.7</DataUri>
                <Metadata>
                    <Item Key="DisplayName">Signin and Signup</Item>
                </Metadata>
            </ContentDefinition>
        </ContentDefinitions>
    </BuildingBlocks>
    <ClaimsProviders><!--Claims Providers Here-->
        <ClaimsProvider>
            <DisplayName>Token Issuer</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="JwtIssuer">
                    <DisplayName>JWT Issuer</DisplayName>
                    <Protocol Name="None"/>
                    <OutputTokenFormat>JWT</OutputTokenFormat>
                    <Metadata>
                        <Item Key="client_id">IdentityExperienceFramework_populate_by_value</Item>
                        <Item Key="issuer_refresh_token_user_identity_claim_type">objectId</Item>
                        <Item Key="SendTokenResponseBodyWithJsonNumbers">true</Item>
                    </Metadata>
                    <CryptographicKeys>
                        <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer"/>
                        <Key Id="issuer_refresh_token_key" StorageReferenceId="B2C_1A_TokenEncryptionKeyContainer"/>
                    </CryptographicKeys>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>
        <ClaimsProvider>
            <DisplayName>Trustframework Policy Engine TechnicalProfiles</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="TpEngine_c3bd4fe2-1775-4013-b91d-35f16d377d13">
                    <DisplayName>Trustframework Policy Engine Default Technical Profile</DisplayName>
                    <Protocol Name="None" />
                    <Metadata>
                        <Item Key="url">{service:te}</Item>
                    </Metadata>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>
        <ClaimsProvider>
            <DisplayName>Technical Profiles to generate claims</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="UserInputDisplayNameGenerator">
                    <DisplayName>Display Name Claim Generator Technical Profile</DisplayName>
                    <Protocol Name="Proprietary"
                        Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="displayName" />
                    </OutputClaims>
                    <OutputClaimsTransformations>
                        <OutputClaimsTransformation ReferenceId="CreateDisplayNameTransformation" />
                    </OutputClaimsTransformations>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>
        <ClaimsProvider>
            <DisplayName>Technical Profiles to collect user's details </DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="UserInformationCollector1">
                    <DisplayName>Collect User Input Technical Profile</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
                    <Metadata>
                        <Item Key="ContentDefinitionReferenceId">SelfAssertedContentDefinition</Item>
                        <!-- <Item Key="LookupNotFound">The provided email address isn't a valid Contoso Employee email.</Item> -->
                    </Metadata>
                    <DisplayClaims>
                        <DisplayClaim ClaimTypeReferenceId="givenName" Required="true"/>
                        <DisplayClaim ClaimTypeReferenceId="surname" Required="true"/>
                        <DisplayClaim ClaimTypeReferenceId="email" />
                        <DisplayClaim ClaimTypeReferenceId="password" Required="true"/>
                        <DisplayClaim ClaimTypeReferenceId="reenterPassword" Required="true"/>
                    </DisplayClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="givenName"/>
                        <OutputClaim ClaimTypeReferenceId="surname"/>
                        <OutputClaim ClaimTypeReferenceId="email"/>
                        <OutputClaim ClaimTypeReferenceId="password"/>
                        <OutputClaim ClaimTypeReferenceId="reenterPassword"/>
                        <OutputClaim ClaimTypeReferenceId="objectId"/>
                        <OutputClaim ClaimTypeReferenceId="displayName"/>
                    </OutputClaims>
                    <ValidationTechnicalProfiles>
                        <ValidationTechnicalProfile ReferenceId="UserInputDisplayNameGenerator"/>
                        <ValidationTechnicalProfile ReferenceId="AAD-UserWrite"/>
                    </ValidationTechnicalProfiles>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>
        <ClaimsProvider>
            <DisplayName>Azure AD Technical Profiles</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="AAD-UserWrite">
                    <DisplayName>Write user information to AAD</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.AzureActiveDirectoryProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <!-- uncomment for preventing creating/updating existed user -->
                        <!-- <Item Key="Operation">Write</Item>
                        <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">true</Item>
                        <Item Key="UserMessageIfClaimsPrincipalAlreadyExists">The account already exists. Try to create another account</Item> -->
                        <!-- uncomment for updating existed user -->
                        <Item Key="Operation">Write</Item>
                        <Item Key="ApplicationObjectId">b0efc3fc-0f06-4bed-b3c7-27a0baf4c4e1</Item>
                        <Item Key="ClientId">c7ceec25-a10f-40e2-852b-fa770e97ab8a</Item>
                        <!-- <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">true</Item> -->
                    </Metadata>
                    <InputClaims>
                        <!-- <InputClaim ClaimTypeReferenceId="surname" PartnerClaimType="signInNames.xxxId" Required="true" /> -->
                        <InputClaim ClaimTypeReferenceId="email" PartnerClaimType="signInNames.emailAddress" Required="true" />
                    </InputClaims>
                    <PersistedClaims>
                        <PersistedClaim ClaimTypeReferenceId="email" PartnerClaimType="signInNames.emailAddress" />        
                        <PersistedClaim ClaimTypeReferenceId="displayName" />
                        <PersistedClaim ClaimTypeReferenceId="jobTitle" /> 
                        <!-- <PersistedClaim ClaimTypeReferenceId="dateOfBirth" PartnerClaimType="extension_dateOfBirth"/>  -->
                               
                        <!-- <PersistedClaim ClaimTypeReferenceId="employeeHireDate" /> -->
                        <!-- <PersistedClaim ClaimTypeReferenceId="givenName" />
                        <PersistedClaim ClaimTypeReferenceId="surname"/>
                        <PersistedClaim ClaimTypeReferenceId="surname" PartnerClaimType="signInNames.xxxId"/>
                        <PersistedClaim ClaimTypeReferenceId="password"/>
                        <PersistedClaim ClaimTypeReferenceId="passwordPolicies" DefaultValue="DisablePasswordExpiration,DisableStrongPassword" /> -->
                    </PersistedClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="objectId"/>
                        <OutputClaim ClaimTypeReferenceId="jobTitle"/>
                        <OutputClaim ClaimTypeReferenceId="extension_dateOfBirth" />
                        <OutputClaim ClaimTypeReferenceId="extension_MustResetPassword" />
                        <!-- <OutputClaim ClaimTypeReferenceId="userPrincipalName" />
                        <OutputClaim ClaimTypeReferenceId="email" PartnerClaimType="signInNames.emailAddress" />
                        <OutputClaim ClaimTypeReferenceId="surname" /> -->
                    </OutputClaims>
                </TechnicalProfile>
                <TechnicalProfile Id="AAD-UserRead">
                    <DisplayName>Read user from Azure AD storage</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.AzureActiveDirectoryProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <Item Key="Operation">Read</Item>
                        <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">false</Item>
                        <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">false</Item>
                        <Item Key="ApplicationObjectId">b0efc3fc-0f06-4bed-b3c7-27a0baf4c4e1</Item>
                        <Item Key="ClientId">c7ceec25-a10f-40e2-852b-fa770e97ab8a</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="email" PartnerClaimType="signInNames.emailAddress" Required="true" />
                    </InputClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="objectId" />
                         <OutputClaim ClaimTypeReferenceId="jobTitle"/>
                        <OutputClaim ClaimTypeReferenceId="extension_dateOfBirth" />
                        <OutputClaim ClaimTypeReferenceId="extension_MustResetPassword" />
                    </OutputClaims>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>
         <ClaimsProvider>
            <DisplayName>Technical Profiles to collect user's details </DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="UserInformationCollector">
                    <DisplayName>Collect User Input Technical Profile</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
                    <Metadata>
                        <Item Key="ContentDefinitionReferenceId">SelfAssertedContentDefinition</Item>
                    </Metadata>
                    <DisplayClaims>
                        <DisplayClaim ClaimTypeReferenceId="email" Required="true"/>
                        <DisplayClaim ClaimTypeReferenceId="jobTitle" Required="true"/>
                        <DisplayClaim ClaimTypeReferenceId="employeeHireDate" />
                        <!-- <DisplayClaim ClaimTypeReferenceId="dateOfBirth" /> -->
                        <DisplayClaim ClaimTypeReferenceId="givenName" Required="true"/>
                        <DisplayClaim ClaimTypeReferenceId="surname" Required="true"/>
                    </DisplayClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="email"/>
                        <OutputClaim ClaimTypeReferenceId="jobTitle"/>
                        <OutputClaim ClaimTypeReferenceId="givenName"/>
                        <OutputClaim ClaimTypeReferenceId="surname"/>
                        <OutputClaim ClaimTypeReferenceId="displayName" />
                        <OutputClaim ClaimTypeReferenceId="objectId"/>
                        <!-- <OutputClaim ClaimTypeReferenceId="dateOfBirth"/> -->
                    </OutputClaims>
                    <ValidationTechnicalProfiles>
                        <ValidationTechnicalProfile ReferenceId="UserInputDisplayNameGenerator"/>
                        <!-- <ValidationTechnicalProfile ReferenceId="AAD-UserWrite"/> -->
                    </ValidationTechnicalProfiles>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>
    </ClaimsProviders>
    <UserJourneys>
        <UserJourney Id="HelloWorldJourney">
            <OrchestrationSteps>
                <OrchestrationStep Order="1" Type="ClaimsExchange">
                    <ClaimsExchanges>
                        <ClaimsExchange Id="GetUserInformationClaimsExchange" TechnicalProfileReferenceId="UserInformationCollector"/>
                    </ClaimsExchanges>
                </OrchestrationStep>     
                 <OrchestrationStep Order="2" Type="ClaimsExchange">
                    <ClaimsExchanges>
                    <ClaimsExchange Id="AADUserReaderExchange" TechnicalProfileReferenceId="AAD-UserRead"/>
                    </ClaimsExchanges>
                </OrchestrationStep>          
                <OrchestrationStep Order="3" Type="SendClaims" CpimIssuerTechnicalProfileReferenceId="JwtIssuer" />
            </OrchestrationSteps>
        </UserJourney>
    </UserJourneys>
    <RelyingParty><!-- 
            Relying Party Here that's your policy’s entry point
            Specify the User Journey to execute 
            Specify the claims to include in the token that is returned when the policy runs
        -->
        <DefaultUserJourney ReferenceId="HelloWorldJourney"/>
        <TechnicalProfile Id="HelloWorldPolicyProfile">
            <DisplayName>Hello World Policy Profile</DisplayName>
            <Protocol Name="OpenIdConnect"/>
            <OutputClaims>
                <OutputClaim ClaimTypeReferenceId="objectId" PartnerClaimType="sub" />
                <OutputClaim ClaimTypeReferenceId="email" />
                <OutputClaim ClaimTypeReferenceId="givenName"/>
                <OutputClaim ClaimTypeReferenceId="surname"/>
                <OutputClaim ClaimTypeReferenceId="displayName"/>
                <OutputClaim ClaimTypeReferenceId="jobTitle"/>
                <OutputClaim ClaimTypeReferenceId="extension_dateOfBirth"/>
                <OutputClaim ClaimTypeReferenceId="extension_MustResetPassword"/>
            </OutputClaims>
            <SubjectNamingInfo ClaimType="sub"/>
        </TechnicalProfile>
    </RelyingParty>
</TrustFrameworkPolicy>